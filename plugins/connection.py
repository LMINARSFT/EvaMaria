from pyrogram import filters, Client
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from database.connections_mdb import add_connection, all_connections, if_active, delete_connection
from info import ADMINS
import logging
logger = logging.getLogger(__name__)
logger.setLevel(logging.ERROR)
@Client.on_message((filters.private | filters.group) & filters.command('connect'))
async def addconnection(client,message):
    userid = message.from_user.id if message.from_user else None
    if not userid:
        return await message.reply(f"‡∂î‡∂∫‡∑è anonymous admin ‡∂Ø‡∑è‡∂ú‡∑ô‡∂± ‡∂â‡∂±‡∑ä‡∂±‡∑ô.... ‡∂∏‡∂ú‡∑ô Private Chat ‡∂ë‡∂ö‡∂ß ‡∂á‡∑Ä‡∑í‡∂≠‡∑ä /connect ‡∂ú‡∑Ñ‡∂Ω channel ‡∂ë‡∂ö connect ‡∂ö‡∂ª‡∂±‡∑ä‡∂± {message.chat.id}")
    chat_type = message.chat.type

    if chat_type == "private":
        try:
            cmd, group_id = message.text.split(" ", 1)
        except:
            await message.reply_text(
                "<b>‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í ‡∂Ö‡∂±‡∑î‡∂¥‡∑í‡∑Ö‡∑í‡∑Ä‡∑ô‡∂Ω ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±</b>\n\n"
                "<code>/connect groupid</code>\n\n"
                "<i>G‡∂î‡∂∫‡∑è‡∂ú‡∑ô group ‡∂ë‡∂ö‡∑ô id ‡∂ú‡∂±‡∑ä‡∂± ‡∂∏‡∑ö ‡∂∂‡∑ú‡∂ß‡∑ä ‡∂î‡∂∫‡∑è‡∂ú‡∑ô ‡∂ë‡∂ö‡∂ß  add ‡∂ö‡∂ª‡∂±‡∑ä‡∂±  <code>/id</code></i>",
                quote=True
            )
            return

    elif chat_type in ["group", "supergroup"]:
        group_id = message.chat.id

    try:
        st = await client.get_chat_member(group_id, userid)
        if (
            st.status != "administrator"
            and st.status != "creator"
            and str(userid) not in ADMINS
        ):
            await message.reply_text("‡∂î‡∂∫‡∑è ‡∂∏‡∑ö ‡∂Ø‡∑î‡∂±‡∑ä‡∂± group ‡∂ë‡∂ö‡∑ö admin ‡∂â‡∂±‡∑ä‡∂± ‡∂ï‡∂±‡∑ô ‡∂Ö‡∂±‡∑í‡∑Ä‡∑è‡∂ª‡∑ô‡∂±‡∑ä", quote=True)
            return
    except Exception as e:
        logger.exception(e)
        await message.reply_text(
            "Group Id ‡∂ë‡∂ö ‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í\n\n‡∂ë‡∑Ñ‡∑ô‡∂∏‡∂≠‡∑ä ‡∂±‡∑ê‡∂≠‡∑ä‡∂±‡∂∏‡∑ä ‡∂∏‡∂∏ ‡∂í group ‡∂ë‡∂ö‡∑ö ‡∂±‡∑ë.. ‡∂∏‡∑è‡∑Ä Group ‡∂ë‡∂ö‡∂ß add ‡∂ö‡∂ª‡∂Ω ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±",
            quote=True,
        )

        return
    try:
        st = await client.get_chat_member(group_id, "me")
        if st.status == "administrator":
            ttl = await client.get_chat(group_id)
            title = ttl.title

            addcon = await add_connection(str(group_id), str(userid))
            if addcon:
                await message.reply_text(
                    f"Sucessfully connected to **{title}**\n‡∂Ø‡∑ê‡∂±‡∑ä ‡∂î‡∂∫‡∑è‡∂ß ‡∂î‡∂∫‡∑è‡∂ú‡∑ô group ‡∂ë‡∂ö ‡∂∏‡∑ö private chat ‡∂ë‡∂ö‡∑ö ‡∂â‡∂Ø‡∂±‡∑ä ‡∂¥‡∑è‡∂Ω‡∂±‡∂∫ ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∂Ω‡∑î‡∑Ä‡∂±‡∑ä",
                    quote=True,
                    parse_mode="md"
                )
                if chat_type in ["group", "supergroup"]:
                    await client.send_message(
                        userid,
                        f"‡∂∏‡∑ö‡∂ö‡∂ß connect ‡∑Ä‡∑î‡∂±‡∑èüëâ **{title}** !",
                        parse_mode="md"
                    )
            else:
                await message.reply_text(
                    "‡∂∏‡∑ö‡∂ö‡∂ß ‡∂ö‡∂Ω‡∑í‡∂±‡∑ä‡∂∏ connect ‡∂ö‡∂ª‡∂Ω ‡∂≠‡∑í‡∂∂‡∑í‡∂Ω ‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑ä‡∂±‡∑ôü§ó",
                    quote=True
                )
        else:
            await message.reply_text("‡∂∏‡∑è‡∑Ä group ‡∂ë‡∂ö‡∑ö admin ‡∂ö‡∂ª‡∂±‡∑ä‡∂±", quote=True)
    except Exception as e:
        logger.exception(e)
        await message.reply_text('‡∂Ö‡∑Ä‡∑î‡∂Ω‡∂ö‡∑ä ‡∑Ä‡∑î‡∂±‡∑è.. ‡∂ß‡∑í‡∂ö ‡∑Ä‡∑ô‡∂Ω‡∑è‡∑Ä‡∂ö‡∑í‡∂±‡∑ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±', quote=True)
        return


@Client.on_message((filters.private | filters.group) & filters.command('disconnect'))
async def deleteconnection(client,message):
    userid = message.from_user.id if message.from_user else None
    if not userid:
        return await message.reply(f"‡∂î‡∂∫‡∑è anonymous admin ‡∂Ø‡∑è‡∂ú‡∑ô‡∂± ‡∂â‡∂±‡∑ä‡∂±‡∑ô ‡∂∏‡∂ú‡∑ô private chat ‡∂ë‡∂ö‡∂ß ‡∂á‡∑Ä‡∑í‡∂≠‡∑ä /connect ‡∂ú‡∑Ñ‡∂Ω group ‡∂ë‡∂ö connect ‡∂ö‡∂ª‡∂±‡∑ä‡∂± {message.chat.id} ")
    chat_type = message.chat.type

    if chat_type == "private":
        await message.reply_text("‡∂∏‡∑è‡∑Ä groupp ‡∂ë‡∂ö‡∂ö‡∑í‡∂±‡∑ä disconnect ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∂∫‡∑í ‡∂Ø‡∑ê‡∂±‡∂ß connect ‡∑Ä‡∑ô‡∂Ω‡∑è ‡∂≠‡∑í‡∂∫‡∑ô‡∂± grou /channel ‡∂ß‡∑í‡∂ö ‡∂∂‡∂Ω‡∑è‡∂ú‡∂±‡∑ä‡∂±‡∂∫‡∑í /connections ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±‚Äã", quote=True)

    elif chat_type in ["group", "supergroup"]:
        group_id = message.chat.id

        st = await client.get_chat_member(group_id, userid)
        if (
            st.status != "administrator"
            and st.status != "creator"
            and str(userid) not in ADMINS
        ):
            return

        delcon = await delete_connection(str(userid), str(group_id))
        if delcon:
            await message.reply_text("‡∂∏‡∑ö chat ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä disconnect ‡∂ö‡∂ª‡∑è, quote=True)
        else:
            await message.reply_text("‡∂∏‡∑ö‡∂ö ‡∂∏‡∂ß ‡∂ö‡∂Ω‡∑í‡∂±‡∑ä connect ‡∂ö‡∂ª‡∂Ω ‡∂≠‡∑í‡∂∂‡∑ä‡∂∂ ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂±‡∑ô‡∑Ä‡∑ö..\nConnect ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ï‡∂±‡∂±‡∂∏‡∑ä /connect ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±", quote=True)



@Client.on_message(filters.private & filters.command(["connections"]))
async def connections(client,message):
    userid = message.from_user.id

    groupids = await all_connections(str(userid))
    if groupids is None:
        await message.reply_text(
            "‡∂ö‡∑í‡∑É‡∑í‡∂∏ group/channel ‡∂ë‡∂ö‡∂ö‡∂ß connect ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂±‡∑ë.. ‡∂î‡∂∫‡∑è ‡∂∏‡∑î‡∂Ω‡∑í‡∂±‡∑ä‡∂∏ ‡∂∏‡∑è‡∑Ä group / channel ‡∂ë‡∂ö‡∂ö‡∂ß  connect ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂â‡∂±‡∑ä‡∂±",
            quote=True
        )
        return
    buttons = []
    for groupid in groupids:
        try:
            ttl = await client.get_chat(int(groupid))
            title = ttl.title
            active = await if_active(str(userid), str(groupid))
            act = " - ACTIVE" if active else ""
            buttons.append(
                [
                    InlineKeyboardButton(
                        text=f"{title}{act}", callback_data=f"groupcb:{groupid}:{act}"
                    )
                ]
            )
        except:
            pass
    if buttons:
        await message.reply_text(
            "‡∂Ø‡∑ê‡∂±‡∂ß ‡∂≠‡∑í‡∂∫‡∑ô‡∂± Connections ;\n\n",
            reply_markup=InlineKeyboardMarkup(buttons),
            quote=True
        )
    else:
        await message.reply_text(
            "‡∂ö‡∑í‡∑É‡∑í‡∂∏ group / channel ‡∂ë‡∂ö‡∂ö‡∂ß connect ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂±‡∑ë.. ‡∂î‡∂∫‡∑è ‡∂∏‡∑î‡∂Ω‡∑í‡∂±‡∑ä‡∂∏ ‡∂∏‡∑è‡∑Ä group / channel ‡∂ë‡∂ö‡∂ö‡∂ß connect ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂â‡∂±‡∑ä‡∂±",
            quote=True
        )
